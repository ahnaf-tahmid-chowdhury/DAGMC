name: Windows Build/Test

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
    paths-ignore:
      - '.github/workflows/docker_publish.yml'
      - '.github/workflows/linux_build_test.yml'
      - '.github/workflows/linux_upstream_test_*'
      - '.github/workflows/mac_build_test.yml'
      - '.github/workflows/housekeeping.yml'
      - '.github/workflows/changelog_test.yml'
      - '.github/actions/**'
      - 'CI/**'
      - 'doc/**'

  push:
    branches:
      - develop
    paths-ignore:
      - '.github/workflows/docker_publish.yml'
      - '.github/workflows/linux_build_test.yml'
      - '.github/workflows/linux_upstream_test_*'
      - '.github/workflows/mac_build_test.yml'
      - '.github/workflows/housekeeping.yml'
      - '.github/workflows/changelog_test.yml'
      - '.github/actions/**'
      - 'CI/**'
      - 'doc/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  BuildTest:
    runs-on: windows-2022
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""

      # yaml-cpp package has conflicting gtest headers and is not needed for this project
      - name: Conda dependencies
        shell:  bash -l {0}
        run: |
          conda install curl eigen
          conda install -c conda-forge hdf5
          conda remove -y yaml-cpp

      - name: Environment Variables
        shell: bash -l {0}
        run: |
          echo "HOME_PATH=$GITHUB_WORKSPACE/.." >> $GITHUB_ENV
          echo "CONDA_LOC=$(conda info --base)/Library" >> $GITHUB_ENV

      - name: Build MOAB
        shell: bash -l {0}
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 https://bitbucket.org/fathomteam/moab -b 5.5.1
          cd moab
          mkdir -p build
          cd build
          cmake ../ \
                -G"Visual Studio 17 2022"  \
                -DCMAKE_INSTALL_PREFIX="${CONDA_LOC}/" \
                -DENABLE_BLASLAPACK=OFF \
                -DENABLE_FORTRAN=OFF \
                -DENABLE_PYMOAB=OFF \
                -DPYMOAB_INSTALL_PREFIX="${CONDA_LOC}/.." \
                -DBUILD_SHARED_LIBS=ON \
                -DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE} \
                -DENABLE_HDF5=ON \
                -DHDF5_ROOT="${CONDA_LOC}" \
                -DHDF5_hdf5_LIBRARY_RELEASE="${CONDA_LOC}/lib/libhdf5_hl.lib;${CONDA_LOC}/lib/libhdf5.lib;${CONDA_LOC}/lib/zlib.lib;${CONDA_LOC}/lib/libhdf5_cpp.lib" \
                -DCMAKE_BUILD_TYPE=Release 
          cmake --build . --config Release
          cmake --install . --config Release
          cd $GITHUB_WORKSPACE
          rm -rf $GITHUB_WORKSPACE/moab
          echo "MOAB installed"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: build DAGMC
        shell: bash -l {0}
        run: |
          mkdir -p build
          cd build
          # cmake, build, and install
          cmake ../  -G "Visual Studio 17 2022" \
                -DCMAKE_INSTALL_PREFIX=$CONDA_LOC \
                -DBUILD_EXE=ON \
                -DBUILD_STATIC_EXE=ON \
                -DBUILD_SHARED_LIBS=OFF \
                -DBUILD_STATIC_LIBS=ON \
                -DBUILD_TALLY=OFF \
                -DBUILD_BUILD_OBB=OFF \
                -DBUILD_UWUW=ON \
                -DBUILD_MAKE_WATERTIGHT=ON \
                -DBUILD_OVERLAP_CHECK=OFF \
                -DBUILD_TESTS=ON \
                -DMOAB_DIR=$CONDA_LOC \
                -DHDF5_ROOT=$CONDA_LOC \
                -DHDF5_hdf5_LIBRARY_RELEASE="${CONDA_LOC}/lib/libhdf5_hl.lib;${CONDA_LOC}/lib/libhdf5.lib;${CONDA_LOC}/lib/zlib.lib;${CONDA_LOC}/lib/libhdf5_cpp.lib" \
                -DCMAKE_EXE_LINKER_FLAGS="" \
                -DCMAKE_MODULE_LINKER_FLAGS="" \
                -DCMAKE_SHARED_LINKER_FLAGS="" \
                -DCMAKE_STATIC_LINKER_FLAGS="" \
                -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
          cmake --install .
          cd $GITHUB_WORKSPACE
          rm -rf "$GITHUB_WORKSPACE/dagmc"
          echo "DAGMC installed"

      - name: test DAGMC
        shell: bash -l {0}
        run: |
          cd $CONDA_LOC/tests
          dagmc_pointinvol_test.exe
          dagmc_rayfire_test.exe
          dagmc_simple_test.exe
          dagmc_unit_tests.exe
          make_watertight_cone_tests.exe
          make_watertight_cylinder_tests.exe
          make_watertight_no_curve_sphere_tests.exe
          make_watertight_sphere_n_box_test.exe
